%load FTC

% for k=1:14
%     
%     for l=1:14
%         
%    subplot(14,14,(14-l+1)+(k-1)*14)
%    imagesc(log2(FTCn(k,l).Freq/1000),FTCn(k,l).Level,FTCn(k,l).Rpp')  
%    set(gca,'YDir','normal')
%         
%     end
% end


%load ./BFBWMapData/AuditoryCortexBFBWMap102610.mat
load ./BFBWMapData/AuditoryCortexBFBWMap102710.mat

%Remove bad samples - Finding NAN for BF and BW - also 0 BW is undefined so remove 
i=find(isnan(BF) | isnan(Std) | Std==0);
BF(i)=NaN(size(i));
Std(i)=NaN(size(i));
MaskBF=ceil(mean(isnan(BF(:,:,7:9)),3));  %Mask containing All NaN for 65-85 dB
MaskStd=ceil(mean(isnan(Std(:,:,7:9)),3));  %Mask containing All NaN for 65-85 dB
Mask=ceil((MaskBF+MaskStd)/2);  %Combined Mask
i=find(Mask==1);
Mask(i)=NaN(size(i));   %Mask with NAN
BF(:,:,7)=BF(:,:,7)+Mask;
Std(:,:,7)=Std(:,:,7)+Mask;
BF(:,:,8)=BF(:,:,8)+Mask;
Std(:,:,8)=Std(:,:,8)+Mask;
BF(:,:,9)=BF(:,:,9)+Mask;
Std(:,:,9)=Std(:,:,9)+Mask;

%NOTE: Lowest frequency is 1.4142 kHz which is 0 octave - shift so that 1
%kHz is 0 octave
BF=BF+0.5;
MinBF=min(min(min(BF(:,:,7:9))));
MaxBF=max(max(max(BF(:,:,7:9))));

figure
subplot(331)
imagesc(rot90(rot90(rot90(BF(:,:,7)))))
title('65 dB SPL')
set(gca,'XTickLabel','')
set(gca,'YTickLabel','')
set(gca,'YTick',[0:14]+.5)
set(gca,'XTick',[0:14]+.5)
set(gca,'XGrid','on')
set(gca,'YGrid','on')
set(gca,'GridLineStyle','-')
caxis([MinBF MaxBF])
axis equal
set(gca,'XGrid','off')
set(gca,'YGrid','off')
xlim([.5 14.5])

subplot(334)
imagesc(rot90(rot90(rot90(BF(:,:,8)))))
title('75 dB SPL')
set(gca,'XTickLabel','')
set(gca,'YTickLabel','')
set(gca,'YTick',[0:14]+.5)
set(gca,'XTick',[0:14]+.5)
set(gca,'XGrid','on')
set(gca,'YGrid','on')
set(gca,'GridLineStyle','-')
caxis([MinBF MaxBF])
axis equal
set(gca,'XGrid','off')
set(gca,'YGrid','off')
xlim([.5 14.5])

subplot(337)
imagesc(rot90(rot90(rot90(BF(:,:,9)))))
title('85 dB SPL')
set(gca,'XTickLabel','')
set(gca,'YTickLabel','')
set(gca,'YTick',[0:14]+.5)
set(gca,'XTick',[0:14]+.5)
set(gca,'XGrid','on')
set(gca,'YGrid','on')
set(gca,'GridLineStyle','-')
caxis([MinBF MaxBF])
axis equal
set(gca,'XGrid','off')
set(gca,'YGrid','off')
xlim([.5 14.5])



%%%%%%%%%%%%%% BANDWIDTH %%%%%%%%%%%%%%
MinStd=min(min(min(Std(:,:,7:9))));
MaxStd=max(max(max(Std(:,:,7:9))));

subplot(332)
imagesc(rot90(rot90(rot90(2*Std(:,:,7)))))
title('65 dB SPL')
set(gca,'XTickLabel','')
set(gca,'YTickLabel','')
set(gca,'YTick',[0:14]+.5)
set(gca,'XTick',[0:14]+.5)
set(gca,'XGrid','on')
set(gca,'YGrid','on')
set(gca,'GridLineStyle','-')
caxis([2*MinStd 2*MaxStd])
axis equal
set(gca,'XGrid','off')
set(gca,'YGrid','off')
xlim([.5 14.5])

subplot(335)
imagesc(rot90(rot90(rot90(2*Std(:,:,8)))))
title('75 dB SPL')
set(gca,'XTickLabel','')
set(gca,'YTickLabel','')
set(gca,'YTick',[0:14]+.5)
set(gca,'XTick',[0:14]+.5)
set(gca,'XGrid','on')
set(gca,'YGrid','on')
set(gca,'GridLineStyle','-')
caxis([2*MinStd 2*MaxStd])
axis equal
set(gca,'XGrid','off')
set(gca,'YGrid','off')
xlim([.5 14.5])

subplot(338)
imagesc(rot90(rot90(rot90(2*Std(:,:,9)))))
title('85 dB SPL')
set(gca,'XTickLabel','')
set(gca,'YTickLabel','')
set(gca,'YTick',[0:14]+.5)
set(gca,'XTick',[0:14]+.5)
set(gca,'XGrid','on')
set(gca,'YGrid','on')
set(gca,'GridLineStyle','-')
caxis([2*MinStd 2*MaxStd])
axis equal
set(gca,'XGrid','off')
set(gca,'YGrid','off')
xlim([.5 14.5])


subplot(333)
plot(reshape(BF(:,:,7),1,14*14),reshape(2*Std(:,:,7),1,14*14),'ro')
axis equal

subplot(336)
plot(reshape(BF(:,:,8),1,14*14),reshape(2*Std(:,:,8),1,14*14),'ro')
axis equal

subplot(339)
plot(reshape(BF(:,:,9),1,14*14),reshape(2*Std(:,:,9),1,14*14),'ro')
axis equal




figure


subplot(336)
caxis([1.4 5.5])
colorbar

c=colormap 
c(1,:)=[ 1 1 1]
colormap(c)


subplot(339)
caxis([2*MinStd 2*MaxStd])
colorbar

c=colormap 
c(1,:)=[1 1 1]
colormap(c)

% 
% 
% 
% %Computing Mean
% Data=FTCt.data;
% X=log2(FTCt.Freq/min(FTCt.Freq));
% FTCStats.Mean=Data'*X'./sum(Data)';
% FTCStats.Mean=min(FTCt.Freq)*2.^(FTCStats.Mean);
% index=find(isnan(FTCStats.Mean));
% FTCStats.Mask(index)=nan(size(index));
% 
% %Computing Standard Deviation
% XX=ones(length(FTCStats.Mean),1)*X - log2(FTCStats.Mean/min(FTCt.Freq))*ones(size(X));
% FTCStats.Std=sqrt( sum(Data'.*XX.^2,2) ./sum(Data)' ) ;
% 
% %Computing Standard Deviation in Hz (Aug 2012)
% XX=ones(length(FTCStats.Mean),1)*FTCt.Freq - FTCStats.Mean*ones(size(X));
% FTCStats.StdHz=sqrt( sum(Data'.*XX.^2,2) ./sum(Data)' ) ;