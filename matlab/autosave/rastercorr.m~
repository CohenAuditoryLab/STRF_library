%
%function [Ravg,Rstd,R05,R01,R]=rastercorr(RASTER,taxis,T,NB)
%
%   FILE NAME       : RASTER CORR
%   DESCRIPTION     : Across-trial correlation function. Determines 
%                     the trial standard deviation and p<0.01 and p<0.05 
%                     confidence intervals of Ravg with a Bootstrap 
%                     procedure
%
%	RASTER          : Rastergram in compressed format
%   Fsd             : Sampling rate for correlation measurement
%   T               : Recording time interval in seconds
%   MaxTau          : Maximum Correlation Delay (msec)
%	NB              : Number of Bootstraps for Cross Correlation Estimate
%                     Default = 500
%
%RETURNED VALUES
%	Rab             : Average cross-trial correlation function
%	Rabstd          : Across-trial correlation standard deviation array
%	Rab05         	: 2xlength(Ravg) matrix containg the possitive and 
%                     negative p<0.05 confidence intervals
%	Rab01           : 2xlength(Ravg) matrix containg the possitive and 
%                     negative p<0.01 confidence intervals
%
% (C) Monty A. Escabi, Edit Aug 2010
%
function [Ravg,Rstd,R05,R01]=rastercorr(RASTER,Fsd,T,MaxTau,NB)

%Input Arguments
if nargin<4
	NB=500;
end

%Rastergram Lenght
L=size(RASTER,2);
M=size(RASTER,1);

%Sampling Rate for Rastergram
% Fs=1/taxis(1);
Fs=RASTER(1).Fs;

%Maximum Temporal Delay
N=ceil(MaxTau/1000*Fs);

%Normalizing Rastergram so that maximum bin value is 1/dt=Fs
%RASTER=RASTER*Fs;
%Modified July 2006, Fixed all routines so that rasters
%are all normalized

%Performing cross-trial correlation -> symetry allows us to reduce computation
%Finding the Average Cross-Trial Correlation
R=[];
Ravg=zeros(1,2*N+1);
for k=2:M
	clc
	disp(['Computing cross-channel correlation for channel: ' num2str(k)])
	for l=1:k-1
        if isempty(taxis)
            R = [R]
        else
		if exist('/usr/local/bin/xcorrfl')
	%		R=[R;xcorrfft(RASTER(k,:),RASTER(l,:),N)/Fs/max(taxis)];
			%R=[R;xcorr(RASTER(k,:),RASTER(l,:),N)/Fs/max(taxis)];
            [R]=xcorrspikefast(RASTER(k).spet,RASTER(k).spet,Fs,Fsd,MaxTau,T,'n','n','n');
            Ra=[Ra;Raa]; 
            R=[R;cxcorr(RASTER(k,:),RASTER(l,:),N)/Fs/max(taxis)];  % circular corr
		else
			%R=[R;xcorr(RASTER(k,:),RASTER(l,:),N)/Fs/max(taxis)];
            R=[R;cxcorr(RASTER(k,:),RASTER(l,:),N)/Fs/max(taxis)];
        end
        end
	end
end

%Finding Average Correlation and Confidence Intervals using Bootstrap
if size(Ravg,1)>1
	Ravg=mean(R);
else
	Ravg=R;
end
if NB~=0
	[Rstd,R05,R01]=rastercorrbootstrap(R,NB);
else
	R05=-9999;
	R01=-9999;
end
