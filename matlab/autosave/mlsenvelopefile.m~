%
%
%function []=mlsenvelopefiel(FileHeader,LambdaMax,fm,Trefractory,PW,PulseType,ChArray,Fs,M,MaxAmp,MaxdB,AmpDist,NB,seed)
%
%       FILE NAME       : MLS ENVELOPE FILE
%       DESCRIPTION     : Spatio temporal electrical stimulation pattern
%                         across 16 channels. Uses poisson pulse rate
%                         modulated impulse train for each channel. Saves
%                         pulse train sequence into sequential files.
%
%       FileHeader      : File name header (No extension)
%       Fm              : Modulation freq. or Max Modulation Freq. (Hz)
%       M               : Number of samples
%       EnvType         : Envelope type ('mls', 'sin' or 'sqr')
%       Fs              : Sampling Rate (Hz, Default=12207.03125)
%       seed            : Seed for random number generator
%                         (Default = 0)
%
%RETURNED VARIABLES
%
%       No returned values. Saves data to file.
%
% (C) Monty A. Escabi, Jan 2012

function []=mlsenvelopefile(FileHeader,Fm,Beta,M,Fs,EnvType,seed)

%Generating Envelope
if strcmp(EnvType,'mls')
    UF=Fs/2/Fm;
    N=ceil(log2(M/UF));
    Et=mls(N);
    E=round(interp1((0:length(Et)-1),Et,(0:1/UF:length(Et)-1),'nearest'));
    E=(E(1:M)+1)*Beta/2+(1-Beta)/2;
elseif strcmp(EnvType,'sqr')
    E=round(1/2+sin(2*pi*Fm*(1:M)/Fs))*Beta+(1-Beta);
else
    E=(1/2+sin(2*pi*Fm*(1:M)/Fs)/2)*Beta+(1-Beta);
end

%Saving Envelope to File
f=['save ' FileHeader 'Env E Fs Fm Beta M Fs seed'];
eval(f)
